<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" horizontalGap="10" xmlns:ns1="com.adobe.sync.components.*"
                creationComplete="onCreationComplete()" backgroundColor="0xFFFFFF" width="500" height="150">

    <mx:Script><![CDATA[
        import mx.controls.Alert;
        import Date;

        import com.adobe.sync.events.SyncSwfEvent;

        private var myAlertState:Boolean = false;
        private var count:Number = 0;
        private var intervalID:uint;
        private var timeSent:Date = new Date();
        private var clickCount:Number = 0;

        private function changeAlertState():Boolean {
            trace(myAlertState);
            myAlertState = !myAlertState;
            syncConnector.dispatchSyncMessage("alert", myAlertState, false, true);
            return myAlertState;

        }

        //Flashes the SBU Signal and stops after 20 loops
        private function flashSignal():void {
            changeAlertState();

            syncConnector.dispatchSyncMessage("img1Vis", !myAlertState, false, true);
            syncConnector.dispatchSyncMessage("img2Vis", myAlertState, false, true);
            count++;

            if (count == 20) {

                clearInterval(intervalID);

                count = 0;
                syncConnector.dispatchSyncMessage('clearInt', intervalID, false, true);
                syncConnector.dispatchSyncMessage('countChanged', count,false,true);
            }

            syncConnector.dispatchSyncMessage("date", timeSent.toString(), false, true);
            countdbg.text = count.toString();
            syncConnector.dispatchSyncMessage('countChanged', count,false,true);

        }

        private function onCreationComplete():void {

        }


        private function caughtUp(p_evt:SyncSwfEvent):void {

        }

        private function syncMessageReceived(p_evt:SyncSwfEvent):void {
            if (p_evt.data.msgNm == "img1Vis")
                signal0Image.setVisible(p_evt.data.msgVal);

            if (p_evt.data.msgNm == "img2Vis")
                signal1Image.setVisible(p_evt.data.msgVal);

            if (p_evt.data.msgNm == "date")
                properties_ta.text = p_evt.data.msgVal;

            if (p_evt.data.msgNm == "interval") {
                //This is the NEW intervalID as set from the syncConnector
                intervalID = p_evt.data.msgVal;
                intdbg.text = intervalID.toString();
               // SBU_btn.enabled = false;
            }

            if(p_evt.data.msgNm == "countChanged")
            {
                count = p_evt.data.msgVal;
                countdbg.text = count.toString();
            }

            if(p_evt.data.msgNm == "clickCount")
            {
                if(clickCount != p_evt.data.msgVal)
                clickCount = p_evt.data.msgVal;
            }



            if (p_evt.data.msgNm == "clearInt") {
                //SBU_btn.enabled = true;
                intervalID = p_evt.data.msgVal;
                intdbg.text = intervalID.toString();
                clearInterval(intervalID);
                signal0Image.setVisible(true);
                signal1Image.setVisible(false);
            }


        }
        ]]></mx:Script>

    <mx:Button label="Send the SBU Signal" id="SBU_btn" click="if(count == 0) {
                                                                                clickCount++;
                                                                                syncConnector.dispatchSyncMessage('click', clickCount,false,true);
                                                                                if(clickCount % 2 != 0)
                                                                                {
                                                                                properties_ta.text += 'Signal sent by: ' + syncConnector.userID + ': ' + timeSent.toTimeString() + '\n';
                                                                                syncConnector.dispatchSyncMessage('countChanged', count,false,true);
                                                                                intervalID = setInterval(flashSignal, 300);

                                                                                syncConnector.dispatchSyncMessage('interval', intervalID,false,true);
                                                                                syncConnector.dispatchSyncMessage('countChanged', count,false,true);
                                                                                }

                                                                              }


                                                                              else
                                                                              {
                                                                               clearInterval(intervalID);
                                                                               count = 0;
                                                                               countdbg.text = count.toString();
                                                                               syncConnector.dispatchSyncMessage('clearInt', intervalID, false, true);

                                                                               syncConnector.dispatchSyncMessage('countChanged', count,false,true);
                                                                               };
                                                                               "></mx:Button>
    <mx:TextArea width="50%" height="5%" id="properties_ta" x ="0" y ="95"/>
    <mx:Image id="signal0Image" source="@Embed(source='../img/signal1.svg')" x="150" y="0" visible="true"/>
    <mx:Image id="signal1Image" source="@Embed(source='../img/signal2.svg')" x="150" y="0" visible="false"/>
    <mx:Text id ="countdbg" x ="0" y="140" text="0"></mx:Text>
    <mx:Text id ="intdbg" x ="25" y="140" text="0"></mx:Text>


    <ns1:SyncConnector id = "syncConnector" syncMessageReceived = "syncMessageReceived(event)" caughtUp="caughtUp(event)"/>
    <!--<ns1:ConnectionEmulator id = "connectionEmulator" bSyncConnector="{syncConnector}"/>-->
</mx:Application>
